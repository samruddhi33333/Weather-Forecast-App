{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samruddhi Malvankar\\\\weather-forecast-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport WeatherCard from './WeatherCard';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'affb30227de443bbbfd25246250805'; // Replace with your actual key\n\nconst App = () => {\n  _s();\n  const [location, setLocation] = useState('Pune');\n  const [query, setQuery] = useState('Pune');\n  const [pastData, setPastData] = useState([]);\n  const [futureData, setFutureData] = useState([]);\n  const [locationInfo, setLocationInfo] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const today = new Date();\n\n        // Fetch past 5 days\n        const pastPromises = [];\n        for (let i = 1; i <= 5; i++) {\n          const date = new Date(today);\n          date.setDate(date.getDate() - i);\n          const dateStr = date.toISOString().split('T')[0];\n          pastPromises.push(fetch(`https://api.weatherapi.com/v1/history.json?key=${API_KEY}&q=${query}&dt=${dateStr}`).then(res => res.json()));\n        }\n        const pastResults = await Promise.all(pastPromises);\n        const pastForecasts = pastResults.map(res => res.forecast.forecastday[0]);\n\n        // Fetch next 5 days (forecast)\n        const futureRes = await fetch(`https://api.weatherapi.com/v1/forecast.json?key=${API_KEY}&q=${query}&days=6&aqi=no&alerts=no`);\n        const futureData = await futureRes.json();\n        const nextForecasts = futureData.forecast.forecastday.slice(1); // skip today\n\n        setPastData(pastForecasts.reverse()); // show oldest first\n        setFutureData(nextForecasts);\n        setLocationInfo(futureData.location);\n      } catch (error) {\n        console.error('Error fetching weather:', error);\n      }\n    };\n    fetchWeather();\n  }, [query]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setQuery(location);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"5 Days Past & Next Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: location,\n        onChange: e => setLocation(e.target.value),\n        placeholder: \"Enter city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), locationInfo ? /*#__PURE__*/_jsxDEV(WeatherCard, {\n      location: locationInfo,\n      past: pastData,\n      future: futureData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading weather data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"uozyahl3JgPOr/LCbkCJQveHdg0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","WeatherCard","jsxDEV","_jsxDEV","API_KEY","App","_s","location","setLocation","query","setQuery","pastData","setPastData","futureData","setFutureData","locationInfo","setLocationInfo","fetchWeather","today","Date","pastPromises","i","date","setDate","getDate","dateStr","toISOString","split","push","fetch","then","res","json","pastResults","Promise","all","pastForecasts","map","forecast","forecastday","futureRes","nextForecasts","slice","reverse","error","console","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","past","future","_c","$RefreshReg$"],"sources":["C:/Users/Samruddhi Malvankar/weather-forecast-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport WeatherCard from './WeatherCard';\nimport './App.css';\n\nconst API_KEY = 'affb30227de443bbbfd25246250805'; // Replace with your actual key\n\nconst App = () => {\n  const [location, setLocation] = useState('Pune');\n  const [query, setQuery] = useState('Pune');\n  const [pastData, setPastData] = useState([]);\n  const [futureData, setFutureData] = useState([]);\n  const [locationInfo, setLocationInfo] = useState(null);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const today = new Date();\n\n        // Fetch past 5 days\n        const pastPromises = [];\n        for (let i = 1; i <= 5; i++) {\n          const date = new Date(today);\n          date.setDate(date.getDate() - i);\n          const dateStr = date.toISOString().split('T')[0];\n          pastPromises.push(\n            fetch(`https://api.weatherapi.com/v1/history.json?key=${API_KEY}&q=${query}&dt=${dateStr}`)\n              .then(res => res.json())\n          );\n        }\n\n        const pastResults = await Promise.all(pastPromises);\n        const pastForecasts = pastResults.map(res => res.forecast.forecastday[0]);\n\n        // Fetch next 5 days (forecast)\n        const futureRes = await fetch(\n          `https://api.weatherapi.com/v1/forecast.json?key=${API_KEY}&q=${query}&days=6&aqi=no&alerts=no`\n        );\n        const futureData = await futureRes.json();\n        const nextForecasts = futureData.forecast.forecastday.slice(1); // skip today\n\n        setPastData(pastForecasts.reverse()); // show oldest first\n        setFutureData(nextForecasts);\n        setLocationInfo(futureData.location);\n      } catch (error) {\n        console.error('Error fetching weather:', error);\n      }\n    };\n\n    fetchWeather();\n  }, [query]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setQuery(location);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>5 Days Past & Next Weather Forecast</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={location}\n          onChange={(e) => setLocation(e.target.value)}\n          placeholder=\"Enter city\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {locationInfo ? (\n        <WeatherCard\n          location={locationInfo}\n          past={pastData}\n          future={futureData}\n        />\n      ) : (\n        <p>Loading weather data...</p>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}